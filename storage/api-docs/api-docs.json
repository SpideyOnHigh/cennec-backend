{
    "openapi": "3.0.0",
    "info": {
        "title": "Cennec APIs",
        "version": "1.0.0"
    },
    "paths": {
        "/api/delete-my-account": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user account",
                "operationId": "a9ce9400a7b459c13b4009e064e43027",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted successfully!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exists",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/block-user": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Block a user",
                "operationId": "c982fe307aacc793445e510f14626883",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blocked_by_user_id",
                                    "blocked_user_id"
                                ],
                                "properties": {
                                    "blocked_by_user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "blocked_user_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blocked successfully!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The blocked_by_user_id field is required.",
                                                "The blocked_user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/report-user": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Report a user",
                "operationId": "c7a19107624fb98102d0780c79c361bf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reported_by_user_id",
                                    "reported_user_id"
                                ],
                                "properties": {
                                    "reported_by_user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "reported_user_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User reported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reported successfully!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The reported_by_user_id field is required.",
                                                "The reported_user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/favourite-user": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Add a user to favorites",
                "operationId": "5055ea5be128f57f816f0e61015b1411",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "favorited_by_user_id",
                                    "favorited_user_id"
                                ],
                                "properties": {
                                    "favorited_by_user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "favorited_user_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully added to favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reported successfully!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The favorited_by_user_id field is required.",
                                                "The favorited_user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/fetch-user-detail": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Fetch user details by user ID",
                "operationId": "7e989794074ff9c23f1e1e4bf4cef4a2",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "The ID of the user to fetch details for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "apple_id": {
                                                    "type": "string",
                                                    "example": "apple123"
                                                },
                                                "google_id": {
                                                    "type": "string",
                                                    "example": "google123"
                                                },
                                                "fcm_token": {
                                                    "type": "string",
                                                    "example": "fcmToken123"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-20T12:00:00Z"
                                                },
                                                "invitation_code_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "user_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-20T12:00:00Z"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "example": "1990-01-01"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Lorem ipsum dolor sit amet."
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "location_latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 40.7128
                                                },
                                                "location_longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -74.006
                                                },
                                                "is_smoke": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "is_drink": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_distance_preference": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "distance_preference": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "is_age_preference": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "from_age_preference": {
                                                    "type": "integer",
                                                    "example": 18
                                                },
                                                "to_age_preference": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "is_mutual_interest_preference": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "min_mutual_interest": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "gender_preference": {
                                                    "type": "string",
                                                    "example": "female"
                                                },
                                                "is_display_in_search": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_in_recommendation": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_location": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_age": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_notification_on": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_agree_term_condition": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exists!",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/fetch-questions": {
            "get": {
                "tags": [
                    "Question Management"
                ],
                "summary": "Fetch a list of questions",
                "operationId": "a792aab11c19a945b88b9fe969d68897",
                "responses": {
                    "200": {
                        "description": "Questions fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is your favorite color?"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching questions."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/fetch-user-que-ans": {
            "get": {
                "tags": [
                    "User Questions"
                ],
                "summary": "Retrieve user questions and answers",
                "operationId": "77165eb1ae0c3f6435ca3b834c76bad8",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user whose questions and answers are to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User questions and answers fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "question_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is your favorite color?"
                                                    },
                                                    "answer": {
                                                        "type": "string",
                                                        "example": "Blue"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exists",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/user-feedback": {
            "post": {
                "tags": [
                    "Feedback Management"
                ],
                "summary": "Submit feedback for a user",
                "operationId": "6d29bf8bffac70770b5df5f8aabc4de1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "rating",
                                    "feedback_type_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "feedback_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great service!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback stored successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "feedback_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Great service!"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-20T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exist",
                                                "The rating field is required.",
                                                "The feedback_type_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/get-user-settings": {
            "get": {
                "tags": [
                    "User Settings"
                ],
                "summary": "Fetch user settings by user ID",
                "operationId": "b2aeeb330d6e831682d0d1171fe028d3",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User settings fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_notification_on": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_location": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_age": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exist",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/edit-user-settings": {
            "post": {
                "tags": [
                    "User Settings"
                ],
                "summary": "Update user settings",
                "operationId": "1e74cd259712b30a778876340c90cf1a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_notification_on": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_display_location": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_display_age": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User settings updated successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_notification_on": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_location": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_display_age": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Does not exists"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error when updating user settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update user settings."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/my-interest": {
            "get": {
                "tags": [
                    "User Interests"
                ],
                "summary": "Fetch user interests by user ID",
                "operationId": "2cb6de8c5d888ef8ed5655880c4f137d",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User interests fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "interest_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "interest_name": {
                                                        "type": "string",
                                                        "example": "Music"
                                                    },
                                                    "interest_color": {
                                                        "type": "string",
                                                        "example": "#FF5733"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Does not exists"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/my-cennections": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Fetch user connections by user ID",
                "operationId": "24831ed52ee7491c5a1d780d290f1d99",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User connections fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "from_user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "to_user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "johndoe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.doe@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or user not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/edit-user-profile": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile information",
                "operationId": "e65b67d1b0ac5c44701445722874efa6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "This is my bio."
                                    },
                                    "dob": {
                                        "description": "Date of birth in MM-DD-YYYY format",
                                        "type": "string",
                                        "format": "date",
                                        "example": "01-01-1990"
                                    },
                                    "gender": {
                                        "description": "1 for male, 2 for female, 3 for other",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_smoke": {
                                        "description": "0 for no, 1 for yes, 2 for sometimes",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_drink": {
                                        "description": "0 for no, 1 for socially, 2 for frequently, 3 for heavily",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User settings updated successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "This is my bio."
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "example": "01-01-1990"
                                                },
                                                "gender": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_smoke": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_drink": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Does not exists"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update user settings."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/get-user-profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Retrieve user profile data",
                "operationId": "ca029ed7f051a725e7bdcf28481a832a",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user whose profile data is to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "This is my bio."
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "example": "01-01-1990"
                                                },
                                                "gender": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_smoke": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_drink": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_question_answers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "question_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "Answer to the question"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exists",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/edit-user-que-ans": {
            "post": {
                "tags": [
                    "User Questions"
                ],
                "summary": "Update user's answer to a specific question",
                "operationId": "4887d752d2a52bfaccd8931b12473576",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "question_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "answer": {
                                        "type": "string",
                                        "example": "Updated answer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User's answer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Updated successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "answer": {
                                                    "type": "string",
                                                    "example": "Updated answer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "User Does not exists",
                                                "The user_id field is required."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update the answer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/user-profile-images": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload profile images for a user",
                "operationId": "3c8f4719978e04ff83702b068ce7448e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "images"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "The ID of the user for whom the images are being uploaded.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "images": {
                                        "description": "Array of images to upload. Maximum file size is 10MB per image.",
                                        "type": "array",
                                        "items": {
                                            "description": "An image file to be uploaded.",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Images uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the images were uploaded successfully.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "Images uploaded successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request failed due to validation errors.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation error messages.",
                                            "type": "object",
                                            "example": {
                                                "user_id": "The user id field is required",
                                                "images": "The images field is required"
                                            }
                                        },
                                        "data": {
                                            "description": "Additional error details.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request failed due to an internal server error.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "An error occurred while uploading images."
                                        },
                                        "data": {
                                            "description": "Additional error details.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/get-user-profile-images": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Retrieve profile images for a user",
                "operationId": "02fdc3e23b6bfc5ec929b35e466477e6",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "description": "The ID of the user whose profile images are to be fetched.",
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile images retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request was successful.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "Fetched Successfully."
                                        },
                                        "data": {
                                            "description": "Array of profile image URLs.",
                                            "type": "array",
                                            "items": {
                                                "description": "The URL of the profile image.",
                                                "type": "string",
                                                "format": "uri"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No images found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request was unsuccessful.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "No images found for this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request failed due to validation errors.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Validation error messages.",
                                            "type": "object",
                                            "example": {
                                                "user_id": "The user id field is required"
                                            }
                                        },
                                        "data": {
                                            "description": "Additional error details.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates if the request failed due to an internal server error.",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message.",
                                            "type": "string",
                                            "example": "An error occurred while retrieving images."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/fetch-near-users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Fetch a list of nearby users",
                "operationId": "06433440dc0e13acf537213ff84019f7",
                "responses": {
                    "200": {
                        "description": "Nearby users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "johndoe"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "New York"
                                                    },
                                                    "distance": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 5.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching nearby users."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/sign-up-detail": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Signup",
                "description": "Registers a new user with the provided details.",
                "operationId": "signup",
                "requestBody": {
                    "description": "Details required to sign up a new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "confirm_password",
                                    "dob",
                                    "gender",
                                    "invitation_code"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": 1
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "invitation_code": {
                                        "type": "string",
                                        "example": "INVITE1234"
                                    },
                                    "lat": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 40.7128
                                    },
                                    "lng": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -74.006
                                    },
                                    "fcm_token": {
                                        "type": "string",
                                        "example": "fcm_token_example"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "johndoe@example.com"
                                                },
                                                "fcm_token": {
                                                    "type": "string",
                                                    "example": "fcm_token_example"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the user."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invitation-sign-up": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in with OTP",
                "description": "Generates and sends an OTP to the user's email for sign-in.",
                "operationId": "signin",
                "requestBody": {
                    "description": "Credentials required to sign in",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "invitation_code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "invitation_code": {
                                        "type": "string",
                                        "example": "INVITE1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "otp": {
                                                    "type": "integer",
                                                    "example": 1234
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please try again later."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticates a user and provides a personal access token.",
                "operationId": "login",
                "requestBody": {
                    "description": "User credentials for login",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "himanshu.dwivedi@9spl.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test105*"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "your_personal_access_token_here"
                                                },
                                                "userData": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "johndoe@example.com"
                                                        },
                                                        "fcm_token": {
                                                            "type": "string",
                                                            "example": "fcm_token_example"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/valid-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate OTP",
                "description": "Validates the OTP sent to the user's email and returns success or failure response.",
                "operationId": "validOtp",
                "requestBody": {
                    "description": "Email and OTP for validation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "otp": {
                                        "type": "integer",
                                        "example": 1234
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP Verified successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please insert valid OTP."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logs out the authenticated user by deleting all their tokens.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/change-password": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change Password",
                "description": "Changes the password for the authenticated user.",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "Current and new password for changing the user's password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentPassword123"
                                    },
                                    "new_password": {
                                        "description": "Must be at least 6 characters long",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Incorrect current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The current password is incorrect."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The current password field is required."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/send-reset-link": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Password Reset Link",
                "description": "Sends an OTP to the user's email for password reset. The OTP is valid for 10 minutes.",
                "operationId": "sendResetLink",
                "requestBody": {
                    "description": "Email address of the user to send the OTP for password reset",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP Has been sent to your mail."
                                        },
                                        "data": {
                                            "properties": {
                                                "otp": {
                                                    "type": "integer",
                                                    "example": 1234
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or email does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password",
                "description": "Resets the user's password after verifying the OTP sent to the user's email. Requires the OTP, email, and new password.",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "OTP and new password details to reset the user's password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp",
                                    "email",
                                    "password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "otp": {
                                        "description": "OTP received for password reset",
                                        "type": "string",
                                        "example": "1234"
                                    },
                                    "email": {
                                        "description": "Email of the user whose password is being reset",
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "New password for the user, must meet complexity requirements",
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123!"
                                    },
                                    "confirm_password": {
                                        "description": "Confirmation of the new password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or incorrect OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The OTP entered is incorrect. Please try again."
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/interest-list": {
            "get": {
                "tags": [
                    "Interests"
                ],
                "summary": "Fetch the list of interests",
                "operationId": "71a3865c60f499c90c81f9ae655793c0",
                "responses": {
                    "200": {
                        "description": "Fetched successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sports"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            }
        },
        "/api/interest-based-user": {
            "get": {
                "tags": [
                    "Interests"
                ],
                "summary": "Fetch Users Based on Interest",
                "description": "Retrieves users related to a specific interest based on the provided `interest_id`. The `interest_id` must be valid and exist in the database.",
                "operationId": "fetchInterestRelatedUser",
                "parameters": [
                    {
                        "name": "interest_id",
                        "in": "query",
                        "description": "The ID of the interest to fetch related users for.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.doe@example.com"
                                                    },
                                                    "interest_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "The given interest_id is invalid."
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Interest not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interest not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "description": "Bearer token for authentication",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "User Management",
            "description": "User Management"
        },
        {
            "name": "Question Management",
            "description": "Question Management"
        },
        {
            "name": "User Questions",
            "description": "User Questions"
        },
        {
            "name": "Feedback Management",
            "description": "Feedback Management"
        },
        {
            "name": "User Settings",
            "description": "User Settings"
        },
        {
            "name": "User Interests",
            "description": "User Interests"
        },
        {
            "name": "User Connections",
            "description": "User Connections"
        },
        {
            "name": "User Profile",
            "description": "User Profile"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Interests",
            "description": "Interests"
        }
    ]
}